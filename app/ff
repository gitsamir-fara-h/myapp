<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Category;
use App\Post;
class PostsController extends Controller
{


























































                                                 @php $images = json_decode($post->featrued,true); @endphp
                                                   @if(is_array($images) && !empty($images))
                                                   @foreach ($images as $image)
                                                     <img src="{{ url('images/'.$image) }}"/>
                                                   @endforeach
                                                   @endif









                                                   $this->validate($request, [

                                                          'title' => 'required',
                                                           'category_id' => 'required',
                                                            'content' => 'required',
                                                             'tags' => 'required',
                                                           'featrued' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048'

                                                   ]);



                                                 $post = post::create([

                                                   'title'=>input::get(  'title'),
                                                 'category_id'=>input::get(  'category_id'),
                                                 'content'=>input::get('content'),
                                                 'slug' =>input::get('title')
                                                   ])


                                                 $featrued = input::file('featrued');
                                                 foreach ($images as $image ) {
                                                 $move = $image->move('public/images',$image->getClientOriginalName());
                                                 if(move){
                                                  $imagedata = Image::create(
                                                    [
                                                      'title'=> $image->getClientOriginalName(),
                                                      'filename'=> $image->getClientOriginalName(),
                                                    ]
                                                  );
                                                  var_dump('image uploaded');
                                                  $product->image()->attach([$imagedata->id]);
                                                 }
                                                 endforeach;
                                                 // code...
                                                 }










    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
            return view('posts.index')->with('posts',Post::all());
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('posts.create')->with('categories',Category::all());;
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
      $this->validate($request,[
          "title"    => "required",
          "content"  => "required",
          "category_id"  => "required",
          "featured" => "required|image"
      ]);

      $featured = $request->featured;
      $featured_new_name = time().$featured->getClientOriginalName();
      $featured->move('uploads/posts',$featured_new_name);


      $post = Post::create([
          "title"    => $request->title,
          "content"  => $request->content,
          "category_id"  => $request->category_id,
          "featrued" => 'uploads/posts/'.$featured_new_name,
          "slug"    => str_slug($request->title)
      ]);

      $post->save();


   return redirect()->back();

 // dd($request->all());
  }


    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
      $post = Post::find($id);
      return view('posts.edit')->with('posts',$post)
      ->with('categories',Category::all());
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
      $post = Post::find($id);

      $this->validate($request,[
          "title"    => "required",
          "content"  => "required",
          "category_id"  => "required"

      ]);


      if ( $request->hasFile('featured')  ) {
          $featured = $request->featured;
          $featured_new_name = time().$featured->getClientOriginalName();
          $featured->move('uploads/posts/',$featured_new_name);

          $post->featrued = 'uploads/posts/'.$featured_new_name;

      }

     // dd($post);
      $post->title =  $request->title;
      $post->content =  $request->content;
      $post->category_id = $request->category_id;
      $post->save();


      return redirect()->route('posts');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
      $post = Post::find($id);
      $post->delete($id);
      return redirect()->back();
    }
}
